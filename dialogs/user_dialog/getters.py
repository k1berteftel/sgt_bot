import datetime

from aiogram.types import CallbackQuery, User, Message, ContentType
from aiogram_dialog import DialogManager, ShowMode
from aiogram_dialog.api.entities import MediaAttachment
from aiogram_dialog.widgets.kbd import Button, Select
from aiogram_dialog.widgets.input import ManagedTextInput

from database.model import ProfitsTable
from database.action_data_class import DataInteraction
from config_data.config import load_config, Config
from states.state_groups import startSG


config: Config = load_config()


async def start_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    admin = False
    admins = [*config.bot.admin_ids]
    admins.extend([admin.user_id for admin in await session.get_admins()])
    if event_from_user.id in admins:
        admin = True
    media = MediaAttachment(type=ContentType.PHOTO, path='media/sgt_logo.jpg')
    return {
        'media': media,
        'name': f'<a href="https://t.me/{event_from_user.username}">{event_from_user.full_name}</a>',
        'admin': admin
    }


async def workers_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    select = dialog_manager.dialog_data.get('select')
    if not select:
        select = 'whole'
        dialog_manager.dialog_data['select'] = select
    top = ''
    profits = list(await session.get_profits())
    period = None if select == 'whole' else 7 if select == 'week' else 1
    profits: list[ProfitsTable] = list(filter(
        lambda x: not period or x.create > datetime.datetime.now() - datetime.timedelta(days=period),
        profits
    ))
    user_top = {}
    for profit in profits:
        if profit.user_id not in user_top.keys():
            user = await session.get_user(profit.user_id)
            user_top[profit.user_id] = {
                'name': user.name,
                'sum': profit.amount,
                'profits': 1
            }
            continue
        user_top[profit.user_id]['sum'] += profit.amount
        user_top[profit.user_id]['profits'] += 1
    user_top = sorted(user_top.items(), key=lambda x: x[1]['sum'], reverse=True)[0:50:]
    counter = 1
    places = {
        1: 'ü•á',
        2: 'ü•à',
        3: 'ü•â'
    }
    for user in user_top:
        top += (f'<b>{counter if counter not in [1, 2, 3] else places[counter]}.</b> {user[1]["name"]}:'
                f' - <b>{user[1]["sum"]} $</b> - <b>{user[1]["profits"]}</b> –ø—Ä–æ—Ñ–∏—Ç–æ–≤\n')
        counter += 1
    return {
        'period': '–≤—Å–µ –≤—Ä–µ–º—è' if select == 'whole' else '–Ω–µ–¥–µ–ª—é' if select == 'week' else '—Å–µ–≥–æ–¥–Ω—è',
        'top': top,
        'whole_select': 'üìç' if select == 'whole' else '',
        'week_select': 'üìç' if select == 'week' else '',
        'today_select': 'üìç' if select == 'today' else ''
    }


async def top_choose(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    select = clb.data.split('_')[0]
    dialog_manager.dialog_data['select'] = select
    await dialog_manager.switch_to(startSG.workers)


async def profile_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    user = await session.get_user(event_from_user.id)
    days = (datetime.datetime.now() - user.entry).days
    day_text = ''
    if str(days)[-1].endswith('1'):
        day_text = '–¥–µ–Ω—å'
    elif int(str(days)[-1]) in [2, 3, 4]:
        day_text = '–¥–Ω—è'
    else:
        day_text = '–¥–Ω–µ–π'
    profits = await session.get_user_profits(event_from_user.id)
    integer_profits = [profit.amount for profit in profits]
    if not integer_profits:
        integer_profits = [0]
    text = (f'<b>üë§–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b> <code>{event_from_user.id}</code>\n\n'
            f' - –£ —Ç–µ–±—è <b>{len(profits)}</b> –ø—Ä–æ—Ñ–∏—Ç–æ–≤ –Ω–∞ —Å—É–º–º—ã <b>{sum(integer_profits)} $</b>\n'
            f' - –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ñ–∏—Ç: <b>{round(sum(integer_profits) / len(integer_profits), 2) if integer_profits else 0} $</b>\n'
            f' - –†–µ–∫–æ—Ä–¥–Ω—ã–π –ø—Ä–æ—Ñ–∏—Ç: <b>{max(integer_profits)}</b>\n\n<em>–í –ø—Ä–æ–µ–∫—Ç–µ:</em> {days} {day_text}')
    return {
        'text': text
    }


async def market_choose(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    market = clb.data.split('_')[0]
    if market == 'sim':
        text = ('<b>eSIM ‚Äî $13</b>\n\n‚Ä¢ –ë–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –Ω–æ–º–µ—Ä–∞–º\n‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n‚Ä¢ '
                '–ü–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –ª—é–±—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã\n‚Ä¢ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å—Ä–∞–∑—É')
    elif market == 'proxy':
        text = ('<b>–ü—Ä–æ–∫—Å–∏ - –æ—Ç $5</b>\n\n‚Ä¢ –ú–æ–±–∏–ª—å–Ω—ã–µ / —Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–µ / –¥–∞—Ç–∞-—Ü–µ–Ω—Ç—Ä—ã\n'
                '‚Ä¢ –î–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞\n‚Ä¢ –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∞–Ω—Ç–∏–¥–µ—Ç–µ–∫—Ç–æ–≤, '
                'Telegram, OLX –∏ –ø—Ä–æ—á–µ–≥–æ')
    elif market == 'parser':
        text = ('<b>–ü–∞—Ä—Å–µ—Ä ‚Äî $72</b>\n\n‚Ä¢ –ü–∞—Ä—Å–∏—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º (OLX –∏ –¥—Ä.)\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç '
                '–ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É\n‚Ä¢ –î–æ 500+ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –¥–µ–Ω—å\n‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—Ç —á–∞—Å—ã —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏')
    else:
        text = ('<b>VPN, –±–∞–Ω–∫–∏, —Å–µ—Ä–≤–∏—Å—ã</b>\n\n‚Ä¢ –í—Å—ë –≤ –Ω–∞–ª–∏—á–∏–∏\n‚Ä¢ –ü–æ–¥ –∑–∞–¥–∞—á–∏ –∏ –ø–æ–¥ –∫–ª—é—á\n‚Ä¢ '
                '–ü–∏—à–∏ –≤ –õ–° - –ø–æ–¥–±–µ—Ä—ë–º –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ')
    dialog_manager.dialog_data['market_text'] = text
    await dialog_manager.switch_to(startSG.services_market)


async def services_market_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    return {
        'text': dialog_manager.dialog_data.get('market_text')
    }


async def manual_choose(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    manual = clb.data.split('_')[0]
    dialog_manager.dialog_data.clear()
    dialog_manager.dialog_data['manual'] = manual
    await dialog_manager.switch_to(state=startSG.watch_manual)


async def watch_manual_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    manual = dialog_manager.dialog_data.get('manual')
    page = dialog_manager.dialog_data.get('page')
    not_last = False
    not_first = False
    if manual == 'beginner':
        buttons = [
            ('üîú –û–±—â–∏–π –º–∞–Ω—É–∞–ª', 'https://telegra.ph/OBSHCHIJ-MANUAL-11-08-2', '1'),
            ('üá™üá∫ –ï–≤—Ä–æ–ø–∞', 'https://telegra.ph/DLYA-NOVICHKOV-05-19', '2'),
            ('üîú –û–±—ä—è—Å–Ω–µ–Ω–∏–µ', 'https://telegra.ph/Vvod-dlya-novichkov-terminy20-11-08', '3'),
            ('üî• –°–∫–∞–º 2.0', 'https://telegra.ph/MANUAL-SKAM-20-OBSHCHIJ-11-09', '4'),
            ('üëÄ  –û—Ç –¢–û–ü –≤–æ—Ä–∫–µ—Ä–∞', 'https://telegra.ph/Manual-ot-TOP-vorkera-11-08', '5')
        ]
        text = '<b>–ú–∞–Ω—É–∞–ª—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤üëá</b>'
    elif manual == 'country':
        basic_buttons = [
            [
                ('üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è EBay 2.0', 'https://telegra.ph/Ebay-20-11-08', '1'),
                ('üáÆüáπ –ò—Ç–∞–ª–∏—è SUBITO 2.0', 'https://telegra.ph/Manual-po-SUBITO-20-11-08', '2'),
                ('üáÆüáπ –ò—Ç–∞–ª–∏—è KIJIJI 2.0', 'https://telegra.ph/Manual-po-kigigi-20-11-08', '3'),
                ('üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è 2.0', 'https://telegra.ph/Avstraliya-11-08-2', '4'),
                ('üá¶üá∫ Gumtree AU', 'https://telegra.ph/Manual-po-Gumtree-Avstraliya-11-08', '5'),
                ('üáµüáπ –ü–æ—Ä—Ç—É–≥–∞–ª–∏—è 2.0', 'https://telegra.ph/Portugaliya-11-08-2', '6'),
                ('üá∑üá¥ –†—É–º—ã–Ω–∏—è OLX 2.0', 'https://telegra.ph/Rumyniya-OLX-20-11-08', '7'),
                ('üá¶üá™ –û–ê–≠ DUBIZZLE 2.0', 'https://telegra.ph/Manual-po-OAEH-11-08-2', '8'),
                ('üá®üáø –ß–µ—Ö–∏—è/–°–ª–æ–≤–∞–∫–∏—è 1.0/2.0', 'https://telegra.ph/POMOSHCH-PO-CHEHII-TO-ZHE-SAMOE-CHTO-I-U-SLOVAKII-11-09', '9'),
            ],
            [
                ('üá®üáø –ß–µ—Ö–∏—è', 'https://telegra.ph/Manual-po-CHehii-20-11-08', '10'),
                ('üá≠üá∫ –í–µ–Ω–≥—Ä–∏—è', 'https://telegra.ph/MANUAL---VENGRIYA-11-08', '11'),
                ('üá™üá∏ –ò—Å–ø–∞–Ω–∏—è WALLAPOP 2.0', 'https://telegra.ph/Ispaniya-Wallapop-20-11-08', '12'),
                ('üá®üá¶ –ö–∞–Ω–∞–¥–∞', 'https://telegra.ph/Canada-11-08-9', '13'),
                ('üáπüá≠ –¢–∞–∏–ª–∞–Ω–¥', 'https://telegra.ph/Tailand-11-08', '14'),
                ('üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', 'https://telegra.ph/MANUAL-MARKTPLAATSNL-12-26', '15'),
                ('üá¶üáπ –ê–≤—Å—Ç—Ä–∏—è', 'https://telegra.ph/Avstriya-Shpock-11-08', '16'),
                ('üá∑üá∫ –†–æ—Å—Å–∏—è Avito', 'https://telegra.ph/rossiya-avito-11-08', '17'),
                ('üá™üá∫ –ú–∞–Ω—É–∞–ª Booking', 'https://telegra.ph/Manual-booking-11-08', '18'),
            ]
        ]
        if not page:
            page = 0
            dialog_manager.dialog_data['page'] = page
        if page != 0:
            not_first = True
        if page != len(basic_buttons) - 1:
            not_last = True
        text = '<b>–ú–∞–Ω—É–∞–ª—ã –ø–æ —Å—Ç—Ä–∞–Ω–∞–ºüëá</b>'
        buttons = basic_buttons[page]
    else:
        buttons = [
            ('‚ôü –û–±—â–µ–Ω–∏–µ –≤ –¢–ü', 'https://telegra.ph/Obshchenie-v-TP-11-08', '1'),
            ('ü¶Ñ –ü–æ—á–µ–º—É –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è', 'https://telegra.ph/Demotivaciya-Tilt-Psihologiya-skama-11-08', '2'),
            ('üá™üá∫ –û–±—â–∏–π –º–∞–Ω—É–∞–ª', 'https://telegra.ph/OBSHCHIJ-MANUAL-11-09-3', '3')
        ]
        text = '<b>–ü—Ä–æ—á–∏–µ –º–∞–Ω—É–∞–ª—ãüëá</b>'

    return {
        'text': text,
        'items': buttons,
        'not_first': not_first,
        'page': f'{page+1}/{len(basic_buttons)}' if page else False,
        'not_last': not_last
    }


async def pager(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    move = clb.data.split('_')[0]
    page = dialog_manager.dialog_data['page']
    if move == 'next':
        dialog_manager.dialog_data['page'] = page + 1
    else:
        dialog_manager.dialog_data['page'] = page - 1
    await dialog_manager.switch_to(startSG.watch_manual)


async def admins_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    text = (f'<b>üíª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</b>\n\n<b>‚Ä¢ –¢–°</b>\n‚îó @RestouI0\n\n<b>‚Ä¢ –ê–¥–º–∏–Ω—ã</b>\n‚îó @soblazn00\n  @Sad0ca\n\n'
            f'<b>‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã</b>\n‚îó @nevechennnnnn\n  @yawtiktok\n\n<b>‚Ä¢ –í–±–∏–≤–µ—Ä</b>\n‚îó @Vex8899\n\n<b>‚Ä¢ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏</b>\n'
            f'‚îó @PoLinKaaa_lovee\n  @meladzeworkout\n  @soblazn00\n  @Sad0ca\n\n<b>‚Ä¢ –ë–∞—Ä—ã–≥–∞</b>\n‚îó @shershulyaneebet')
    return {'text': text}


async def about_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    text = (f'<b>–í—ã–ø–ª–∞—Ç—ã</b>\n<blockquote> –ü—Ä–æ—Ü–µ–Ω—Ç—ã\n    ‚î£ 80% - –ü—Ä—è–º–æ–π\n    ‚îó +5% - Top-–∞–º</blockquote>\n\n'
            f'<em>‚ùóÔ∏è–í—ã–ø–ª–∞—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –Ω–∞ - <b>BTC / LTC / USDT</b> —á–µ–∫–æ–º –Ω–∞ <b>CryptoBot</b>\n'
            f'–ö—É—Ä—Å –≤—ã–ø–ª–∞—Ç : <b>localbitcoin</b></em>\n\n–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤: <b>‚òëÔ∏è–í–æ—Ä–∫</b>')
    return {'text': text}


async def rules_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    text = ('<b>üìã–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç–∞ SGT</b>\n\n<em>‚õîÔ∏è –ü—Ä–∞–≤–∏–ª–∞–º–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ:</em>\n<b>1.</b> –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∫–æ—à–µ–ª—å–∫–∏ '
            '–¥–ª—è –ø—Ä–∏—ë–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π. \n<b>2.</b> –ü—ã—Ç–∞—Ç—å—Å—è –æ–±–º–∞–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Ä–∞–∑–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö.\n'
            '<b>2.</b> –ü—ã—Ç–∞—Ç—å—Å—è –æ–±–º–∞–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Ä–∞–∑–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö.\n<b>4.</b> –†–µ–∫–ª–∞–º–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö '
            '–ø—Ä–æ–µ–∫—Ç–æ–≤/—É—Å–ª—É–≥.\n<b>5.</b> –ü–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ.\n<b>6.</b> –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.\n'
            '<b>7.</b> –î–µ–∑–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–∞—Ö.\n<b>8.</b> –û—Ç–ø—Ä–∞–≤–∫–∞ gif, —Å—Ç–∏–∫–µ—Ä–æ–≤, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –≤–∏–¥–µ–æ —Å 18+, '
            '—à–æ–∫–∏—Ä—É—é—â–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.\n<b>9.</b> –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª–µ —Å –≤—ã–ø–ª–∞—Ç–∞–º–∏.\n<b>10.</b> –ü—Ä–æ–≤–µ—Ä—è—é —á–µ–∫–∏, '
            '–∫–æ—Ç–æ—Ä—ã–º –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö –¥–Ω–µ–π (–Ω–µ –Ω—É–∂–Ω–æ –º–Ω–µ –∫–∏–¥–∞—Ç—å —á–µ–∫, –∫–æ—Ç–æ—Ä–æ–º—É –æ–∫–æ–ª–æ –º–µ—Å—è—Ü–∞).')
    return {'text': text}